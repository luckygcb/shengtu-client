// @generated by protoc-gen-es v1.10.0
// @generated from file upward.proto (package echo_journey.upward, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum echo_journey.upward.UpwardMessageType
 */
export declare enum UpwardMessageType {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: STUDENT_MESSAGE = 1;
   */
  STUDENT_MESSAGE = 1,

  /**
   * @generated from enum value: AUDIO_MESSAGE = 2;
   */
  AUDIO_MESSAGE = 2,
}

/**
 * @generated from message echo_journey.upward.UpwardMessage
 */
export declare class UpwardMessage extends Message<UpwardMessage> {
  /**
   * @generated from field: echo_journey.upward.UpwardMessageType type = 1;
   */
  type: UpwardMessageType;

  /**
   * @generated from field: bytes payload = 2;
   */
  payload: Uint8Array;

  constructor(data?: PartialMessage<UpwardMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "echo_journey.upward.UpwardMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpwardMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpwardMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpwardMessage;

  static equals(a: UpwardMessage | PlainMessage<UpwardMessage> | undefined, b: UpwardMessage | PlainMessage<UpwardMessage> | undefined): boolean;
}

/**
 * @generated from message echo_journey.upward.StudentMessage
 */
export declare class StudentMessage extends Message<StudentMessage> {
  /**
   * @generated from field: string text = 1;
   */
  text: string;

  constructor(data?: PartialMessage<StudentMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "echo_journey.upward.StudentMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StudentMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StudentMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StudentMessage;

  static equals(a: StudentMessage | PlainMessage<StudentMessage> | undefined, b: StudentMessage | PlainMessage<StudentMessage> | undefined): boolean;
}

/**
 * @generated from message echo_journey.upward.AudioMessage
 */
export declare class AudioMessage extends Message<AudioMessage> {
  /**
   * @generated from field: string expected_sentence = 1;
   */
  expectedSentence: string;

  /**
   * @generated from field: bytes audio_data = 2;
   */
  audioData: Uint8Array;

  constructor(data?: PartialMessage<AudioMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "echo_journey.upward.AudioMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioMessage;

  static equals(a: AudioMessage | PlainMessage<AudioMessage> | undefined, b: AudioMessage | PlainMessage<AudioMessage> | undefined): boolean;
}

