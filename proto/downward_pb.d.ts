// @generated by protoc-gen-es v1.10.0
// @generated from file downward.proto (package echo_journey.downward, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum echo_journey.downward.DownwardMessageType
 */
export declare enum DownwardMessageType {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: TUTOR_MESSAGE = 1;
   */
  TUTOR_MESSAGE = 1,

  /**
   * @generated from enum value: WORD_CORRECT_MESSAGE = 2;
   */
  WORD_CORRECT_MESSAGE = 2,

  /**
   * @generated from enum value: SENTENCE_CORRECT_MESSAGE = 3;
   */
  SENTENCE_CORRECT_MESSAGE = 3,
}

/**
 * @generated from message echo_journey.downward.DownwardMessage
 */
export declare class DownwardMessage extends Message<DownwardMessage> {
  /**
   * @generated from field: echo_journey.downward.DownwardMessageType type = 1;
   */
  type: DownwardMessageType;

  /**
   * @generated from field: bytes payload = 2;
   */
  payload: Uint8Array;

  constructor(data?: PartialMessage<DownwardMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "echo_journey.downward.DownwardMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DownwardMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DownwardMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DownwardMessage;

  static equals(a: DownwardMessage | PlainMessage<DownwardMessage> | undefined, b: DownwardMessage | PlainMessage<DownwardMessage> | undefined): boolean;
}

/**
 * @generated from message echo_journey.downward.TutorMessage
 */
export declare class TutorMessage extends Message<TutorMessage> {
  /**
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * @generated from field: repeated echo_journey.downward.WordCorrectMessage expected_messages = 2;
   */
  expectedMessages: WordCorrectMessage[];

  constructor(data?: PartialMessage<TutorMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "echo_journey.downward.TutorMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TutorMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TutorMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TutorMessage;

  static equals(a: TutorMessage | PlainMessage<TutorMessage> | undefined, b: TutorMessage | PlainMessage<TutorMessage> | undefined): boolean;
}

/**
 * @generated from message echo_journey.downward.WordCorrectMessage
 */
export declare class WordCorrectMessage extends Message<WordCorrectMessage> {
  /**
   * @generated from field: string word = 1;
   */
  word: string;

  /**
   * @generated from field: string initial_consonant = 2;
   */
  initialConsonant: string;

  /**
   * @generated from field: string vowels = 3;
   */
  vowels: string;

  /**
   * @generated from field: int32 tone = 4;
   */
  tone: number;

  constructor(data?: PartialMessage<WordCorrectMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "echo_journey.downward.WordCorrectMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WordCorrectMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WordCorrectMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WordCorrectMessage;

  static equals(a: WordCorrectMessage | PlainMessage<WordCorrectMessage> | undefined, b: WordCorrectMessage | PlainMessage<WordCorrectMessage> | undefined): boolean;
}

/**
 * @generated from message echo_journey.downward.SentenceCorrectMessage
 */
export declare class SentenceCorrectMessage extends Message<SentenceCorrectMessage> {
  /**
   * @generated from field: repeated echo_journey.downward.WordCorrectMessage expected_messages = 1;
   */
  expectedMessages: WordCorrectMessage[];

  /**
   * @generated from field: repeated echo_journey.downward.WordCorrectMessage messages = 2;
   */
  messages: WordCorrectMessage[];

  /**
   * @generated from field: string suggestions = 3;
   */
  suggestions: string;

  constructor(data?: PartialMessage<SentenceCorrectMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "echo_journey.downward.SentenceCorrectMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentenceCorrectMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentenceCorrectMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentenceCorrectMessage;

  static equals(a: SentenceCorrectMessage | PlainMessage<SentenceCorrectMessage> | undefined, b: SentenceCorrectMessage | PlainMessage<SentenceCorrectMessage> | undefined): boolean;
}

